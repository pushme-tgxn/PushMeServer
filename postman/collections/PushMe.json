{
	"info": {
		"_postman_id": "1b9dcc7a-ed9f-41e5-a736-251d4fdbde0d",
		"name": "PushMe",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "5262446-1b9dcc7a-ed9f-41e5-a736-251d4fdbde0d"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "AuthEmail",
					"item": [
						{
							"name": "Register",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56d4fc8c-0aa6-4753-9a6d-f49fa7bfe05c",
										"exec": [
											"pm.test(\"response should be json\", () => {",
											"    pm.response.to.not.be.error;",
											"    pm.response.to.be.withBody;",
											"    pm.response.to.be.json;",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"success returned\", function () {",
											"    pm.expect(jsonData.success).to.deep.equal(true);",
											"});",
											"",
											"pm.test(\"correct user returned\", function () {",
											"    if(jsonData.success) {",
											"        pm.expect(jsonData.user.id).to.exist.and.be.a(\"number\")",
											"        pm.response.to.have.status(200);",
											"    }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "8f9435b6-9fac-4112-b2b4-afceafaf82e1",
										"exec": [
											"var email = pm.variables.replaceIn('{{$randomEmail}}')\r",
											"pm.globals.set(\"email\", email);\r",
											"\r",
											"var password = pm.variables.replaceIn('{{$randomPassword}}')\r",
											"pm.globals.set(\"password\", password);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7c1ce14a-68b5-4e94-b81f-00e1d331f349",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"new-{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{env_url}}/auth/email/register",
									"host": [
										"{{env_url}}"
									],
									"path": [
										"auth",
										"email",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2a13e125-1e41-4f13-9044-75dcf56fdaa6",
										"exec": [
											"pm.test(\"response should be json\", () => {",
											"    pm.response.to.not.be.error;",
											"    pm.response.to.be.withBody;",
											"    pm.response.to.be.json;",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"success returned\", function () {",
											"    pm.expect(jsonData.success).to.deep.equal(true);",
											"});",
											"",
											"pm.test(\"jsonData.user.token returned\", function () {",
											"    pm.expect(jsonData.user.token).to.exist.and.be.a(\"string\");",
											"});",
											"",
											"// set auth variable",
											"pm.collectionVariables.set(\"jwtToken\", jsonData.user.token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "3917f922-2a29-44fd-9f0b-af26766ee3f9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"new-{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{env_url}}/auth/email/login",
									"host": [
										"{{env_url}}"
									],
									"path": [
										"auth",
										"email",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dc5858dd-208a-4b17-ba16-99cfaee14d7b",
										"exec": [
											"pm.test(\"response should be json\", () => {",
											"    pm.response.to.not.be.error;",
											"    pm.response.to.be.withBody;",
											"    pm.response.to.be.json;",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"success returned\", function () {",
											"    pm.expect(jsonData.success).to.deep.equal(true);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "6d227ccb-8c9a-4e2f-92e6-b224575571ee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwtToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"{{email}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{env_url}}/auth/email/email",
									"host": [
										"{{env_url}}"
									],
									"path": [
										"auth",
										"email",
										"email"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "708e73b5-59c7-4139-a63e-c7d29f7dc0a3",
										"exec": [
											"pm.test(\"response should be json\", () => {",
											"    pm.response.to.not.be.error;",
											"    pm.response.to.be.withBody;",
											"    pm.response.to.be.json;",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"pm.test(\"success returned\", function () {",
											"    pm.expect(jsonData.success).to.deep.equal(true);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "cc6db73e-f92e-4f90-8d9b-32b62445ba40",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{jwtToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"password\": \"lol\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{env_url}}/auth/email/password",
									"host": [
										"{{env_url}}"
									],
									"path": [
										"auth",
										"email",
										"password"
									]
								}
							},
							"response": []
						}
					],
					"id": "0c5982f6-0c2f-4caa-815b-27abf4afd1a3"
				},
				{
					"name": "Current User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "90fe801a-e457-4c42-952c-9538640ab1a8",
								"exec": [
									"pm.test(\"response should be json\", () => {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"success returned\", function () {\r",
									"    pm.expect(jsonData.success).to.deep.equal(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ff2558ba-7001-49f7-bd4e-bc44aac91848",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{env_url}}/user",
							"host": [
								"{{env_url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Push History",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e9bf462-9b6f-4187-9cb5-9ce6ebca138f",
								"exec": [
									"pm.test(\"response should be json\", () => {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"success returned\", function () {\r",
									"    pm.expect(jsonData.success).to.deep.equal(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "da85bb20-afd3-4b90-98e8-d5619113b6a3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{env_url}}/user/history",
							"host": [
								"{{env_url}}"
							],
							"path": [
								"user",
								"history"
							]
						}
					},
					"response": []
				}
			],
			"id": "e4a277bd-3ae0-4f78-b19d-a36bc3caf657"
		},
		{
			"name": "Device",
			"item": [
				{
					"name": "Create Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1e51bff-c142-403a-9bfa-0ee830d7b507",
								"exec": [
									"pm.test(\"response should be json\", () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"success returned\", function () {",
									"    pm.expect(jsonData.success).to.deep.equal(true);",
									"});",
									"",
									"pm.collectionVariables.set(\"deviceId\", jsonData.device.id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "46e1df5f-e603-4f56-be24-59b1fa9468cc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{   \r\n    \"deviceKey\": \"$guid\",\r\n    \"name\": \"TestingFakeDevice\",\r\n    \"token\": \"ExponentPushToken[{{$randomLoremSlug}}]\",\r\n    \"nativeToken\": {\r\n        \"type\": \"android\",\r\n        \"data\": \"abc123\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{env_url}}/device/create",
							"host": [
								"{{env_url}}"
							],
							"path": [
								"device",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45781dfe-a29d-4cfe-aa35-71a7bfea7ae1",
								"exec": [
									"pm.test(\"response should be json\", () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"success returned\", function () {",
									"    pm.expect(jsonData.success).to.deep.equal(true);",
									"});",
									"",
									"// probs wont have deviceid",
									"pm.collectionVariables.set(\"deviceId\", jsonData.devices[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "21958834-05f0-45ab-96c9-bbbae69297f6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{env_url}}/device",
							"host": [
								"{{env_url}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "689cd3a2-fb17-40e1-8b3d-150dd7eb8a3e",
								"exec": [
									"pm.test(\"response should be json\", () => {",
									"    pm.response.to.not.be.error;",
									"    pm.response.to.be.withBody;",
									"    pm.response.to.be.json;",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"success returned\", function () {",
									"    pm.expect(jsonData.success).to.deep.equal(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "15860b3c-0580-4bc6-a515-a3a4761e3dc3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{env_url}}/device/{{deviceId}}",
							"host": [
								"{{env_url}}"
							],
							"path": [
								"device",
								"{{deviceId}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "9da97adc-2881-489f-9d8c-760ed6890833"
		},
		{
			"name": "Topic",
			"item": [
				{
					"name": "Create Topic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c996eb08-0c0b-4b77-a803-14e51a873424",
								"exec": [
									"pm.test(\"response should be json\", () => {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"success returned\", function () {\r",
									"    pm.expect(jsonData.success).to.deep.equal(true);\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"topicKey\", jsonData.topic.topicKey);\r",
									"pm.collectionVariables.set(\"topicSecret\", jsonData.topic.secretKey);\r",
									"pm.collectionVariables.set(\"topicId\", jsonData.topic.id);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b3e3290a-596b-4b65-ae6d-78a5cea96a34",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"deviceIds\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{env_url}}/topic",
							"host": [
								"{{env_url}}"
							],
							"path": [
								"topic"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Topics",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "449764ba-44ca-47a2-862f-3d74a13b191e",
								"exec": [
									"pm.test(\"response should be json\", () => {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"success returned\", function () {\r",
									"    pm.expect(jsonData.success).to.deep.equal(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4e33fdfe-6464-48e3-8095-d9039c351d59",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{env_url}}/topic",
							"host": [
								"{{env_url}}"
							],
							"path": [
								"topic"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Topic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e966f9f3-c4f8-4f6f-a072-818138916243",
								"exec": [
									"pm.test(\"response should be json\", () => {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"success returned\", function () {\r",
									"    pm.expect(jsonData.success).to.deep.equal(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "82559a2f-ca3b-486c-b01f-f23eb6eb88b5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{env_url}}/topic/{{topicId}}",
							"host": [
								"{{env_url}}"
							],
							"path": [
								"topic",
								"{{topicId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Topic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "084dabe9-41d8-48f3-85bb-cb895c98135a",
								"exec": [
									"pm.test(\"response should be json\", () => {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"success returned\", function () {\r",
									"    pm.expect(jsonData.success).to.deep.equal(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "430b5373-216e-47e1-aff9-8d6b6dd5f366",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"deviceIds\": [{{deviceId}}],\r\n    \"name\": \"testing\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{env_url}}/topic/{{topicId}}",
							"host": [
								"{{env_url}}"
							],
							"path": [
								"topic",
								"{{topicId}}"
							]
						}
					},
					"response": []
				}
			],
			"id": "4d5426a8-c8a4-4cbc-8ca8-58e2f7fa4c19"
		},
		{
			"name": "Push",
			"item": [
				{
					"name": "Webhook",
					"item": [
						{
							"name": "Push To Webhook",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2f6200a1-ff53-4a98-be77-6098c3d02943",
										"exec": [
											"pm.test(\"response should be json\", () => {\r",
											"    pm.response.to.not.be.error;\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"success returned\", function () {\r",
											"    pm.expect(jsonData.success).to.deep.equal(true);\r",
											"});\r",
											"\r",
											"pm.collectionVariables.set(\"pushIdent\", jsonData.pushIdent);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "e07368b7-565a-417b-bf78-0894a32ba85a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"big test\",\r\n    \"description\": \"testing testing testing!!! 123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{env_url}}/push/{{topicSecret}}",
									"host": [
										"{{env_url}}"
									],
									"path": [
										"push",
										"{{topicSecret}}"
									]
								}
							},
							"response": [
								{
									"id": "e34c8390-1160-40d5-819f-40919b3008d8",
									"name": "Push To Webhook",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\": \"big test\",\r\n    \"description\": \"testing testing testing!!! 123\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{env_url}}/webhook/push/{{webhookSecret}}",
											"host": [
												"{{env_url}}"
											],
											"path": [
												"webhook",
												"push",
												"{{webhookSecret}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "298"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 16 Sep 2021 14:07:44 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"12a-GCKy9fa16Rgv5HJNd/F2Pe/wCSI\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"createRequest\": {\n        \"id\": 14,\n        \"webhookId\": 4,\n        \"webhookRequest\": \"{\\\"title\\\":\\\"big test\\\",\\\"description\\\":\\\"testing testing testing!!! 123\\\"}\",\n        \"updatedAt\": \"2021-09-16T14:07:33.939Z\",\n        \"createdAt\": \"2021-09-16T14:07:33.939Z\"\n    },\n    \"requested\": {\n        \"cb87576f-e91f-47e3-97d4-c6969b400542\": {\n            \"status\": \"ok\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "f692f8e6-0ebf-4b51-9701-5da87a38f340"
				},
				{
					"name": "DuoAPI",
					"item": [
						{
							"name": "Check Ping",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d3c561cb-355b-4af7-8bc4-cfdfd443701b",
										"exec": [
											"pm.test(\"response should be json\", () => {\r",
											"    pm.response.to.not.be.error;\r",
											"    pm.response.to.be.withBody;\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"OK returned\", function () {\r",
											"    pm.expect(jsonData.stat).to.deep.equal(\"OK\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "7d3a7a04-cccc-4d42-9d4e-2079f0c5b413",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{env_url}}/auth/v2/ping",
									"host": [
										"{{env_url}}"
									],
									"path": [
										"auth",
										"v2",
										"ping"
									]
								}
							},
							"response": [
								{
									"id": "38f983af-a476-4119-9e32-529df0414690",
									"name": "Push To Webhook",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\": \"big test\",\r\n    \"description\": \"testing testing testing!!! 123\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{env_url}}/webhook/push/{{webhookSecret}}",
											"host": [
												"{{env_url}}"
											],
											"path": [
												"webhook",
												"push",
												"{{webhookSecret}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "298"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 16 Sep 2021 14:07:44 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"12a-GCKy9fa16Rgv5HJNd/F2Pe/wCSI\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"createRequest\": {\n        \"id\": 14,\n        \"webhookId\": 4,\n        \"webhookRequest\": \"{\\\"title\\\":\\\"big test\\\",\\\"description\\\":\\\"testing testing testing!!! 123\\\"}\",\n        \"updatedAt\": \"2021-09-16T14:07:33.939Z\",\n        \"createdAt\": \"2021-09-16T14:07:33.939Z\"\n    },\n    \"requested\": {\n        \"cb87576f-e91f-47e3-97d4-c6969b400542\": {\n            \"status\": \"ok\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Duo PreAuth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b465a2c1-4ba5-4cc6-a917-64e16db1aa0f",
										"exec": [
											"// pm.test(\"response should be json\", () => {\r",
											"//     pm.response.to.not.be.error;\r",
											"//     pm.response.to.be.withBody;\r",
											"//     pm.response.to.be.json;\r",
											"// });\r",
											"\r",
											"// var jsonData = pm.response.json();\r",
											"\r",
											"// pm.test(\"OK returned\", function () {\r",
											"//     pm.expect(jsonData.stat).to.deep.equal(\"OK\");\r",
											"// });\r",
											"\r",
											"// pm.collectionVariables.set(\"duoDeviceKey\", jsonData.response.devices[0].device);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "650862d4-707b-428f-b1e6-7679b26cc71f",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "88b4a9f2-2e95-4b8f-b440-63dcee6200a0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{topicSecret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{topicKey}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{env_url}}/auth/v2/preauth",
									"host": [
										"{{env_url}}"
									],
									"path": [
										"auth",
										"v2",
										"preauth"
									]
								}
							},
							"response": [
								{
									"id": "11354ba9-c485-4687-8e01-774320c47d93",
									"name": "Push To Webhook",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\": \"big test\",\r\n    \"description\": \"testing testing testing!!! 123\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{env_url}}/webhook/push/{{webhookSecret}}",
											"host": [
												"{{env_url}}"
											],
											"path": [
												"webhook",
												"push",
												"{{webhookSecret}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "298"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 16 Sep 2021 14:07:44 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"12a-GCKy9fa16Rgv5HJNd/F2Pe/wCSI\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"createRequest\": {\n        \"id\": 14,\n        \"webhookId\": 4,\n        \"webhookRequest\": \"{\\\"title\\\":\\\"big test\\\",\\\"description\\\":\\\"testing testing testing!!! 123\\\"}\",\n        \"updatedAt\": \"2021-09-16T14:07:33.939Z\",\n        \"createdAt\": \"2021-09-16T14:07:33.939Z\"\n    },\n    \"requested\": {\n        \"cb87576f-e91f-47e3-97d4-c6969b400542\": {\n            \"status\": \"ok\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Duo Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "843cdc72-7877-490c-b582-27dfd1501fd4",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "c9b5ab33-82d5-490a-8e53-cacfea236476",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{topicSecret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{topicKey}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"device\": \"{{duoDeviceKey}}\",\r\n    \"username\": \"tgxn\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{env_url}}/auth/v2/auth",
									"host": [
										"{{env_url}}"
									],
									"path": [
										"auth",
										"v2",
										"auth"
									]
								}
							},
							"response": [
								{
									"id": "7f7521ab-df7a-4ffb-a9c8-6e377a241e14",
									"name": "Push To Webhook",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\": \"big test\",\r\n    \"description\": \"testing testing testing!!! 123\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{env_url}}/webhook/push/{{webhookSecret}}",
											"host": [
												"{{env_url}}"
											],
											"path": [
												"webhook",
												"push",
												"{{webhookSecret}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "298"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 16 Sep 2021 14:07:44 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"12a-GCKy9fa16Rgv5HJNd/F2Pe/wCSI\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"createRequest\": {\n        \"id\": 14,\n        \"webhookId\": 4,\n        \"webhookRequest\": \"{\\\"title\\\":\\\"big test\\\",\\\"description\\\":\\\"testing testing testing!!! 123\\\"}\",\n        \"updatedAt\": \"2021-09-16T14:07:33.939Z\",\n        \"createdAt\": \"2021-09-16T14:07:33.939Z\"\n    },\n    \"requested\": {\n        \"cb87576f-e91f-47e3-97d4-c6969b400542\": {\n            \"status\": \"ok\"\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "Duo Auth Status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "71721dfd-9065-454a-811f-305057a8dfb1",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "98862c41-1b70-47d6-ba87-cea8e0699951",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{topicSecret}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{topicKey}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{env_url}}/auth/v2/auth_status",
									"host": [
										"{{env_url}}"
									],
									"path": [
										"auth",
										"v2",
										"auth_status"
									]
								}
							},
							"response": [
								{
									"id": "c1129c05-208e-435b-8a37-946f511acb96",
									"name": "Push To Webhook",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\": \"big test\",\r\n    \"description\": \"testing testing testing!!! 123\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{env_url}}/webhook/push/{{webhookSecret}}",
											"host": [
												"{{env_url}}"
											],
											"path": [
												"webhook",
												"push",
												"{{webhookSecret}}"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Length",
											"value": "298"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Date",
											"value": "Thu, 16 Sep 2021 14:07:44 GMT"
										},
										{
											"key": "Etag",
											"value": "W/\"12a-GCKy9fa16Rgv5HJNd/F2Pe/wCSI\""
										},
										{
											"key": "X-Powered-By",
											"value": "Express"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"createRequest\": {\n        \"id\": 14,\n        \"webhookId\": 4,\n        \"webhookRequest\": \"{\\\"title\\\":\\\"big test\\\",\\\"description\\\":\\\"testing testing testing!!! 123\\\"}\",\n        \"updatedAt\": \"2021-09-16T14:07:33.939Z\",\n        \"createdAt\": \"2021-09-16T14:07:33.939Z\"\n    },\n    \"requested\": {\n        \"cb87576f-e91f-47e3-97d4-c6969b400542\": {\n            \"status\": \"ok\"\n        }\n    }\n}"
								}
							]
						}
					],
					"id": "2d42ee92-5a5a-4492-978b-8be4737b71c8"
				},
				{
					"name": "Responses",
					"item": [
						{
							"name": "Record Response",
							"id": "4dbe1639-eca2-4851-a647-bfed03a560eb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"response\":{\r\n        \"test\": \"bar\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{env_url}}/push/{{pushIdent}}/response",
									"host": [
										"{{env_url}}"
									],
									"path": [
										"push",
										"{{pushIdent}}",
										"response"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Response",
							"id": "a0b2d29f-ad8f-445f-b5d1-d40f8e98432b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"response\":{\r\n        \"test\": \"bar\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{env_url}}/push/{{pushIdent}}/response",
									"host": [
										"{{env_url}}"
									],
									"path": [
										"push",
										"{{pushIdent}}",
										"response"
									]
								}
							},
							"response": []
						}
					],
					"id": "230126c7-53bf-478a-9490-e599e5dd6cd4"
				}
			],
			"id": "95dd3b14-a796-4863-ac2f-5ad3c4886e17"
		},
		{
			"name": "Clean Up",
			"item": [
				{
					"name": "Delete Topic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "97014285-60fa-4c7a-97d3-4406c5e61ad4",
								"exec": [
									"pm.test(\"response should be json\", () => {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"success returned\", function () {\r",
									"    pm.expect(jsonData.success).to.deep.equal(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "105ec099-9ea0-47f5-a232-b0cac8e57f15",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{env_url}}/topic/{{topicId}}",
							"host": [
								"{{env_url}}"
							],
							"path": [
								"topic",
								"{{topicId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a268b4ff-d8f7-4cee-9da9-bee9c3bb73bd",
								"exec": [
									"pm.test(\"response should be json\", () => {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"success returned\", function () {\r",
									"    pm.expect(jsonData.success).to.deep.equal(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "33844195-41aa-4912-83b9-62a5bcefd36d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{env_url}}/device/{{deviceId}}",
							"host": [
								"{{env_url}}"
							],
							"path": [
								"device",
								"{{deviceId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Current User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "90fe801a-e457-4c42-952c-9538640ab1a8",
								"exec": [
									"pm.test(\"response should be json\", () => {\r",
									"    pm.response.to.not.be.error;\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"success returned\", function () {\r",
									"    pm.expect(jsonData.success).to.deep.equal(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2e8e5de7-1bfb-4060-9f00-cfc2e216c991",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwtToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{env_url}}/user",
							"host": [
								"{{env_url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				}
			],
			"id": "a02344c4-dc81-4ffe-8214-482b2a3c9dc4"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "88b369ee-143f-4949-8e35-21466420de0a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "97f53826-7fce-48fe-8033-dc323d9dc755",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "051b3371-ab00-4f28-b3a3-e10d7210212d",
			"key": "env_url",
			"value": "https://pushme.tgxn.net"
		},
		{
			"id": "9cd3eeac-6ff3-46ca-b35b-79be1a53314f",
			"key": "jwtToken",
			"value": "{{access_token}}"
		},
		{
			"id": "ae8d68a1-35d2-4c43-b6ca-2df581e64c10",
			"key": "webhookSecret",
			"value": ""
		},
		{
			"id": "d7aba1ca-a479-4887-9473-7d8575eb2a1d",
			"key": "topicSecret",
			"value": ""
		},
		{
			"id": "3f532022-9ab9-4287-a484-cdf84b1a4011",
			"key": "deviceId",
			"value": ""
		},
		{
			"id": "21c9a6d0-9400-497a-8a97-0e8d0947e75c",
			"key": "topicId",
			"value": ""
		},
		{
			"id": "ddf922ae-5614-4b9e-908d-c21449187ba9",
			"key": "topicKey",
			"value": ""
		},
		{
			"id": "cea17841-1312-45a8-9b5d-aa51057bcd11",
			"key": "duoDeviceKey",
			"value": ""
		},
		{
			"id": "257ed08a-59e3-42b6-aa50-142235ac1299",
			"key": "env_url1",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"id": "a2f7cbf7-913b-4d85-a8b1-aa9c7f124ef6",
			"key": "pushIdent",
			"value": ""
		}
	]
}